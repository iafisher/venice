---
source: tests/end_to_end.rs
expression: x86_output
---
.globl venice_main
venice_main:

venice_main_0:
  pushq %rbp
  movq %rsp, %rbp
  subq $0, %rsp
  pushq %r12
  pushq %r13
  pushq %r14
  pushq %r15
  pushq %rbx
  movq $1, %r10
  movq $1, %r11
  cmpq %r11, %r10
  je if_true_1
  jmp if_false_2

if_true_1:
  movq $.s_0, %r14
  movq %r14, %rdi
  pushq %r10
  pushq %r11
  call venice_string_new
  popq %r11
  popq %r10
  movq %rax, %r13
  movq %r13, %rdi
  pushq %r10
  pushq %r11
  call venice_println
  popq %r11
  popq %r10
  movq %rax, %r12
  jmp if_end_3

if_false_2:
  movq $.s_1, %r12
  movq %r12, %rdi
  pushq %r10
  pushq %r11
  call venice_string_new
  popq %r11
  popq %r10
  movq %rax, %r11
  movq %r11, %rdi
  pushq %r10
  pushq %r11
  call venice_println
  popq %r11
  popq %r10
  movq %rax, %r10
  jmp if_end_3

if_end_3:
  movq $0, %r10
  movq %r10, %rax
  popq %rbx
  popq %r15
  popq %r14
  popq %r13
  popq %r12
  addq $0, %rsp
  popq %rbp
  retq

.s_0:
  .string "pass"
.s_1:
  .string "fail"


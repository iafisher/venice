---
source: tests/end_to_end.rs
expression: x86_output
---
increment__0:

increment__0_0:
  pushq %rbp
  movq %rsp, %rbp
  subq $8, %rsp
  pushq %r12
  pushq %r13
  pushq %r14
  pushq %r15
  pushq %rbx
  movq %rdi, -8(%rbp)
  movq -8(%rbp), %r10
  movq %r10, %r11
  movq $1, %r10
  addq %r10, %r11
  movq %r11, %r11
  movq %r11, %rax
  popq %rbx
  popq %r15
  popq %r14
  popq %r13
  popq %r12
  addq $8, %rsp
  popq %rbp
  retq

.globl venice_main
venice_main:

venice_main_1:
  pushq %rbp
  movq %rsp, %rbp
  subq $0, %rsp
  pushq %r12
  pushq %r13
  pushq %r14
  pushq %r15
  pushq %rbx
  movq $38, %r10
  movq %r10, %r11
  pushq %r10
  pushq %r11
  movq %r11, %rdi
  subq $8, %rsp
  call increment__0
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r11
  movq %r11, %r12
  pushq %r10
  pushq %r11
  movq %r12, %rdi
  subq $8, %rsp
  call increment__0
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r12
  movq %r12, %r13
  pushq %r10
  pushq %r11
  movq %r13, %rdi
  subq $8, %rsp
  call increment__0
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r13
  movq %r13, %r14
  pushq %r10
  pushq %r11
  movq %r14, %rdi
  subq $8, %rsp
  call increment__0
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r14
  movq %r14, %r15
  pushq %r10
  pushq %r11
  movq %r15, %rdi
  subq $8, %rsp
  call venice_printint
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r15
  movq $0, %r10
  movq %r10, %rax
  popq %rbx
  popq %r15
  popq %r14
  popq %r13
  popq %r12
  addq $0, %rsp
  popq %rbp
  retq



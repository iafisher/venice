---
source: tests/end_to_end.rs
expression: x86_output
---
.globl venice_main
venice_main:
  pushq %rbp
  movq %rsp, %rbp
  subq $16, %rsp
  pushq %r12
  pushq %r13
  pushq %r14
  pushq %r15
  pushq %rbx

venice_main_0:
  movq $.s_0, %r10
  movq %r10, -8(%rbp)
  pushq %r10
  pushq %r11
  movq -8(%rbp), %rdi
  subq $8, %rsp
  call venice_string_new
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r10
  movq %r10, -16(%rbp)
  pushq %r10
  pushq %r11
  movq -16(%rbp), %rdi
  subq $8, %rsp
  call venice_println
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r10
  movq $0, %r10
  movq %r10, %rax
  jmp venice_main_return_1

venice_main_return_1:
  popq %rbx
  popq %r15
  popq %r14
  popq %r13
  popq %r12
  addq $16, %rsp
  popq %rbp
  retq

.s_0:
  .string "Hello, world!"


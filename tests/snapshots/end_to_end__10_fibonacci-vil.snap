---
source: tests/end_to_end.rs
expression: vil_output
---
extern venice_printint;



func venice_main {

venice_main_0:
  frame_set_up 8
  callee_save %rg2
  callee_save %rg3
  callee_save %rg4
  callee_save %rg5
  callee_save %rg6
  %rg0 = set 12
  %rp0 = move %rg0
  caller_save %rg0
  caller_save %rg1
  call %fibonacci__0
  %rg1 = caller_restore
  %rg0 = caller_restore
  %rg0 = move %rt
  store %rg0, -8  // x__1
  %rg0 = load -8  // x__1
  %rp0 = move %rg0
  caller_save %rg0
  caller_save %rg1
  call %venice_printint
  %rg1 = caller_restore
  %rg0 = caller_restore
  %rg0 = move %rt
  %rg0 = set 0
  %rt = move %rg0
  %rg6 = callee_restore
  %rg5 = callee_restore
  %rg4 = callee_restore
  %rg3 = callee_restore
  %rg2 = callee_restore
  frame_tear_down 8
  ret
}

func fibonacci__0 {

fibonacci__0_1:
  frame_set_up 40
  callee_save %rg2
  callee_save %rg3
  callee_save %rg4
  callee_save %rg5
  callee_save %rg6
  store %rp0, -8  // n__2
  %rg0 = set 1
  store %rg0, -16  // fib_i__3
  %rg0 = set 0
  store %rg0, -24  // fib_i_minus_1__4
  %rg0 = set 1
  store %rg0, -32  // i__5
  jump %while_cond_2

while_cond_2:
  %rg0 = load -32  // i__5
  %rg1 = move %rg0
  %rg0 = load -8  // n__2
  cmp %rg1, %rg0
  jump_lt %while_3 %while_end_4

while_3:
  %rg0 = load -16  // fib_i__3
  store %rg0, -40  // tmp__6
  %rg0 = load -16  // fib_i__3
  %rg1 = move %rg0
  %rg0 = load -24  // fib_i_minus_1__4
  %rg1 = add %rg1, %rg0
  store %rg1, -16  // fib_i__3
  %rg0 = load -40  // tmp__6
  store %rg0, -24  // fib_i_minus_1__4
  %rg0 = load -32  // i__5
  %rg1 = move %rg0
  %rg0 = set 1
  %rg1 = add %rg1, %rg0
  store %rg1, -32  // i__5
  jump %while_cond_2

while_end_4:
  %rg0 = load -16  // fib_i__3
  %rt = move %rg0
  %rg6 = callee_restore
  %rg5 = callee_restore
  %rg4 = callee_restore
  %rg3 = callee_restore
  %rg2 = callee_restore
  frame_tear_down 40
  ret
}


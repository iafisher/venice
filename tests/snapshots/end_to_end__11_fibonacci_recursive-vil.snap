---
source: tests/end_to_end.rs
expression: vil_output
---
extern venice_printint;



func fibonacci__0 {

fibonacci__0_0:
  frame_set_up 8
  callee_save %rg2
  callee_save %rg3
  callee_save %rg4
  callee_save %rg5
  callee_save %rg6
  store %rp0, -8  // n__1
  %rg0 = load -8  // n__1
  %rg1 = move %rg0
  %rg0 = set 0
  cmp %rg1, %rg0
  jump_eq %if_true_1 %if_false_2

if_true_1:
  %rg0 = set 0
  %rt = move %rg0
  %rg6 = callee_restore
  %rg5 = callee_restore
  %rg4 = callee_restore
  %rg3 = callee_restore
  %rg2 = callee_restore
  frame_tear_down 8
  ret
  jump %if_end_3

if_false_2:
  %rg0 = load -8  // n__1
  %rg1 = move %rg0
  %rg0 = set 1
  cmp %rg1, %rg0
  jump_eq %if_true_4 %if_false_5

if_true_4:
  %rg0 = set 1
  %rt = move %rg0
  %rg6 = callee_restore
  %rg5 = callee_restore
  %rg4 = callee_restore
  %rg3 = callee_restore
  %rg2 = callee_restore
  frame_tear_down 8
  ret
  jump %if_end_6

if_false_5:
  %rg0 = load -8  // n__1
  %rg1 = move %rg0
  %rg0 = set 1
  %rg1 = sub %rg1, %rg0
  %rg2 = move %rg1
  caller_save %rg0
  caller_save %rg1
  %rp0 = move %rg2
  call %fibonacci__0
  %rg1 = caller_restore
  %rg0 = caller_restore
  %rg2 = move %rt
  %rg3 = move %rg2
  %rg0 = load -8  // n__1
  %rg1 = move %rg0
  %rg0 = set 2
  %rg1 = sub %rg1, %rg0
  %rg2 = move %rg1
  caller_save %rg0
  caller_save %rg1
  %rp0 = move %rg2
  call %fibonacci__0
  %rg1 = caller_restore
  %rg0 = caller_restore
  %rg2 = move %rt
  %rg3 = add %rg3, %rg2
  %rt = move %rg3
  %rg6 = callee_restore
  %rg5 = callee_restore
  %rg4 = callee_restore
  %rg3 = callee_restore
  %rg2 = callee_restore
  frame_tear_down 8
  ret
  jump %if_end_6

if_end_6:
  jump %if_end_3

if_end_3:
}

func venice_main {

venice_main_7:
  frame_set_up 8
  callee_save %rg2
  callee_save %rg3
  callee_save %rg4
  callee_save %rg5
  callee_save %rg6
  %rg0 = set 12
  %rg1 = move %rg0
  caller_save %rg0
  caller_save %rg1
  %rp0 = move %rg1
  call %fibonacci__0
  %rg1 = caller_restore
  %rg0 = caller_restore
  %rg1 = move %rt
  store %rg1, -8  // x__2
  %rg0 = load -8  // x__2
  %rg1 = move %rg0
  caller_save %rg0
  caller_save %rg1
  %rp0 = move %rg1
  call %venice_printint
  %rg1 = caller_restore
  %rg0 = caller_restore
  %rg1 = move %rt
  %rg0 = set 0
  %rt = move %rg0
  %rg6 = callee_restore
  %rg5 = callee_restore
  %rg4 = callee_restore
  %rg3 = callee_restore
  %rg2 = callee_restore
  frame_tear_down 8
  ret
}


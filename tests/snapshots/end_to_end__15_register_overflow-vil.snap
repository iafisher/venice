---
source: tests/end_to_end.rs
expression: vil_output
---
extern venice_string_new;
extern venice_print;
extern venice_printint;



func venice_main {

venice_main_0:
  frame_set_up 0
  callee_save R2
  callee_save R3
  callee_save R4
  callee_save R5
  callee_save R6
  R0 = set s_0
  R1 = move R0
  caller_save R0
  caller_save R1
  call %venice_string_new, R1
  R1 = caller_restore
  R0 = caller_restore
  R1 = move R13
  R2 = move R1
  caller_save R0
  caller_save R1
  call %venice_print, R2
  R1 = caller_restore
  R0 = caller_restore
  R2 = move R13
  R0 = set 6
  R1 = move R0
  R0 = set 7
  R1 = add R1, R0
  R2 = move R1
  R0 = set 88
  R1 = move R0
  R0 = set 80
  R1 = sub R1, R0
  R2 = add R2, R1
  R3 = move R2
  R0 = set 99
  R1 = move R0
  R0 = set 90
  R1 = sub R1, R0
  R2 = move R1
  R0 = set 11
  R1 = move R0
  R0 = set 14
  R1 = sub R1, R0
  R2 = add R2, R1
  R3 = add R3, R2
  R0 = set 20
  R1 = move R0
  R0 = set 19
  R1 = sub R1, R0
  R0 = set 2
  R1 = add R1, R0
  R2 = move R1
  R0 = set 40
  R1 = move R0
  R0 = set 36
  R1 = sub R1, R0
  R0 = set 5
  R1 = add R1, R0
  R0 = set 3
  R1 = add R0, R1
  R2 = add R2, R1
  R3 = add R2, R3
  R4 = move R3
  caller_save R0
  caller_save R1
  call %venice_printint, R4
  R1 = caller_restore
  R0 = caller_restore
  R4 = move R13
  R0 = set 0
  R13 = move R0
  R6 = callee_restore
  R5 = callee_restore
  R4 = callee_restore
  R3 = callee_restore
  R2 = callee_restore
  frame_tear_down 0
  ret
}


data s_0 = "Should be 42: ";


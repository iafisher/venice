---
source: tests/end_to_end.rs
expression: vil_output
---
extern venice_string_new;
extern venice_print;
extern venice_list_length;
extern venice_printint;
extern venice_list_length;
extern venice_string_new;
extern venice_print;
extern venice_list_index;
extern venice_println;



func venice_main {
  // stack_frame_size = 96

venice_main_0:
  R0 = set s_0
  store R0, -16
  R0 = call venice_string_new, mem[-16]
  store R0, -24
  R0 = call venice_print, mem[-24]
  R0 = load -8  // args__0
  store R0, -32
  R0 = call venice_list_length, mem[-32]
  store R0, -40
  R0 = call venice_printint, mem[-40]
  R0 = set 0
  store R0, -48  // i__1
  jump while_cond_2

while_cond_2:
  R0 = load -48  // i__1
  R1 = move R0
  R0 = load -8  // args__0
  store R0, -56
  R0 = call venice_list_length, mem[-56]
  cmp R1, R0
  jump_lt while_3, while_end_4

while_3:
  R0 = set s_1
  store R0, -64
  R0 = call venice_string_new, mem[-64]
  store R0, -72
  R0 = call venice_print, mem[-72]
  R0 = load -8  // args__0
  store R0, -80
  R0 = load -48  // i__1
  store R0, -88
  R0 = call venice_list_index, mem[-80], mem[-88]
  store R0, -96
  R0 = call venice_println, mem[-96]
  R0 = load -48  // i__1
  R1 = move R0
  R0 = set 1
  R1 = add R1, R0
  store R1, -48  // i__1
  jump while_cond_2

while_end_4:
  R0 = set 0
  R13 = move R0
  jump venice_main_return_1

venice_main_return_1:
}


data s_0 = "# of args: ";
data s_1 = "Arg: ";


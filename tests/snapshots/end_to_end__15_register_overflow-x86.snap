---
source: tests/end_to_end.rs
expression: x86_output
---
.globl venice_main
venice_main:

venice_main_0:
  pushq %rbp
  movq %rsp, %rbp
  subq $0, %rsp
  pushq %r12
  pushq %r13
  pushq %r14
  pushq %r15
  pushq %rbx
  movq $.s_0, %r10
  movq %r10, %rdi
  pushq %r10
  pushq %r11
  subq $8, %rsp
  call venice_string_new
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r10
  movq %r10, %rdi
  pushq %r10
  pushq %r11
  subq $8, %rsp
  call venice_print
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r10
  movq $6, %r10
  movq %r10, %r11
  movq $7, %r10
  addq %r10, %r11
  movq %r11, %r11
  movq %r11, %r12
  movq $88, %r10
  movq %r10, %r11
  movq $80, %r10
  subq %r10, %r11
  movq %r11, %r11
  addq %r11, %r12
  movq %r12, %r12
  movq %r12, %r13
  movq $99, %r10
  movq %r10, %r11
  movq $90, %r10
  subq %r10, %r11
  movq %r11, %r11
  movq %r11, %r12
  movq $11, %r10
  movq %r10, %r11
  movq $14, %r10
  subq %r10, %r11
  movq %r11, %r11
  addq %r11, %r12
  movq %r12, %r12
  addq %r12, %r13
  movq %r13, %r13
  movq $20, %r10
  movq %r10, %r11
  movq $19, %r10
  subq %r10, %r11
  movq %r11, %r11
  movq $2, %r10
  addq %r10, %r11
  movq %r11, %r11
  movq %r11, %r12
  movq $40, %r10
  movq %r10, %r11
  movq $36, %r10
  subq %r10, %r11
  movq %r11, %r11
  movq $5, %r10
  addq %r10, %r11
  movq %r11, %r11
  movq $3, %r10
  addq %r11, %r10
  movq %r10, %r11
  addq %r11, %r12
  movq %r12, %r12
  addq %r13, %r12
  movq %r12, %r13
  movq %r13, %rdi
  pushq %r10
  pushq %r11
  subq $8, %rsp
  call venice_printint
  addq $8, %rsp
  popq %r11
  popq %r10
  movq %rax, %r13
  movq $0, %r10
  movq %r10, %rax
  popq %rbx
  popq %r15
  popq %r14
  popq %r13
  popq %r12
  addq $0, %rsp
  popq %rbp
  retq

.s_0:
  .string "Should be 42: "

